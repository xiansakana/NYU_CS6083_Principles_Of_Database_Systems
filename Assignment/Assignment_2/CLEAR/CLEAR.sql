-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-10-22 13:23:17 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE jc_alumnus (
    person_id   NUMBER(6) NOT NULL,
    alumnus_id  NUMBER(6) NOT NULL,
    degree      VARCHAR2(20) NOT NULL,
    year        NUMBER(4) NOT NULL,
    "DATE"      DATE NOT NULL,
    designation VARCHAR2(20) NOT NULL,
    per_type    VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_alumnus ADD CONSTRAINT jc_alumnus_pk PRIMARY KEY ( person_id,
                                                                  per_type );

CREATE TABLE jc_employee (
    person_id NUMBER(6) NOT NULL,
    emp_id    NUMBER(6) NOT NULL,
    hire_date DATE NOT NULL,
    salary    NUMBER(7) NOT NULL,
    dpt_name  VARCHAR2(20) NOT NULL,
    emp_type  VARCHAR2(1) NOT NULL,
    per_type  VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_employee
    ADD CONSTRAINT ch_inh_jc_employee CHECK ( emp_type IN ( 'F', 'S' ) );

ALTER TABLE jc_employee ADD CONSTRAINT jc_employee_pk PRIMARY KEY ( person_id,
                                                                    per_type );

CREATE TABLE jc_faculty (
    person_id    NUMBER(6) NOT NULL,
    faculty_rank VARCHAR2(30) NOT NULL,
    per_type     VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_faculty ADD CONSTRAINT jc_faculty_pk PRIMARY KEY ( person_id,
                                                                  per_type );

CREATE TABLE jc_grad (
    person_id  NUMBER(6) NOT NULL,
    grad_major VARCHAR2(20) NOT NULL,
    per_type   VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_grad ADD CONSTRAINT jc_grad_pk PRIMARY KEY ( person_id,
                                                            per_type );

CREATE TABLE jc_person (
    person_id      NUMBER(6) NOT NULL,
    per_fname      VARCHAR2(30) NOT NULL,
    per_lfane      VARCHAR2(30) NOT NULL,
    per_str        VARCHAR2(30) NOT NULL,
    per_city       VARCHAR2(20) NOT NULL,
    per_state      VARCHAR2(30) NOT NULL,
    per_country    VARCHAR2(20) NOT NULL,
    per_zipcode    VARCHAR2(10) NOT NULL,
    per_gender     VARCHAR2(20) NOT NULL,
    per_dob        DATE NOT NULL,
    per_email      VARCHAR2(30) NOT NULL,
    per_contact_no NUMBER(10) NOT NULL,
    per_ssn        VARCHAR2(11),
    per_type       VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_person
    ADD CONSTRAINT ch_inh_jc_person CHECK ( per_type IN ( 'A', 'F', 'G', 'S', 'U' ) );

--  ERROR: Discriminator Value 'E' in FK JC_EMPLOYEE_JC_PERSON_FKnot found in LOV for Column PER_TYPE - check constraint for Arc FKArc_6 cannot be generated

ALTER TABLE jc_person ADD CONSTRAINT jc_person_pk PRIMARY KEY ( person_id,
                                                                per_type );

CREATE TABLE jc_staff (
    person_id NUMBER(6) NOT NULL,
    job_title VARCHAR2(20) NOT NULL,
    per_type  VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_staff ADD CONSTRAINT jc_staff_pk PRIMARY KEY ( person_id,
                                                              per_type );

CREATE TABLE jc_student (
    person_id       NUMBER(6) NOT NULL,
    std_id          NUMBER(6) NOT NULL,
    undergrad_major VARCHAR2(20) NOT NULL,
    std_type        VARCHAR2(1) NOT NULL,
    per_type        VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_student
    ADD CONSTRAINT ch_inh_jc_student CHECK ( std_type IN ( 'G', 'U' ) );

ALTER TABLE jc_student ADD CONSTRAINT jc_student_pk PRIMARY KEY ( person_id,
                                                                  per_type );

CREATE TABLE jc_undergrad (
    person_id                NUMBER(6) NOT NULL,
    high_school_diploma_year NUMBER(4) NOT NULL,
    per_type                 VARCHAR2(1) NOT NULL
);

ALTER TABLE jc_undergrad ADD CONSTRAINT jc_undergrad_pk PRIMARY KEY ( person_id,
                                                                      per_type );

ALTER TABLE jc_alumnus
    ADD CONSTRAINT jc_alumnus_jc_person_fk FOREIGN KEY ( person_id,
                                                         per_type )
        REFERENCES jc_person ( person_id,
                               per_type );

ALTER TABLE jc_employee
    ADD CONSTRAINT jc_employee_jc_person_fk FOREIGN KEY ( person_id,
                                                          per_type )
        REFERENCES jc_person ( person_id,
                               per_type );

ALTER TABLE jc_faculty
    ADD CONSTRAINT jc_faculty_jc_employee_fk FOREIGN KEY ( person_id,
                                                           per_type )
        REFERENCES jc_employee ( person_id,
                                 per_type );

ALTER TABLE jc_grad
    ADD CONSTRAINT jc_grad_jc_student_fk FOREIGN KEY ( person_id,
                                                       per_type )
        REFERENCES jc_student ( person_id,
                                per_type );

ALTER TABLE jc_staff
    ADD CONSTRAINT jc_staff_jc_employee_fk FOREIGN KEY ( person_id,
                                                         per_type )
        REFERENCES jc_employee ( person_id,
                                 per_type );

ALTER TABLE jc_student
    ADD CONSTRAINT jc_student_jc_person_fk FOREIGN KEY ( person_id,
                                                         per_type )
        REFERENCES jc_person ( person_id,
                               per_type );

ALTER TABLE jc_undergrad
    ADD CONSTRAINT jc_undergrad_jc_student_fk FOREIGN KEY ( person_id,
                                                            per_type )
        REFERENCES jc_student ( person_id,
                                per_type );

CREATE OR REPLACE TRIGGER arc_fkarc_4_jc_grad BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_grad
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.std_type
    INTO d
    FROM
        jc_student a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'G' ) THEN
        raise_application_error(-20223, 'FK JC_GRAD_JC_STUDENT_FK in Table JC_GRAD violates Arc constraint on Table JC_STUDENT - discriminator column STD_TYPE doesn''t have value ''G'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_4_jc_undergrad BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_undergrad
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.std_type
    INTO d
    FROM
        jc_student a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'U' ) THEN
        raise_application_error(-20223, 'FK JC_UNDERGRAD_JC_STUDENT_FK in Table JC_UNDERGRAD violates Arc constraint on Table JC_STUDENT - discriminator column STD_TYPE doesn''t have value ''U'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_5_jc_faculty BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_faculty
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.emp_type
    INTO d
    FROM
        jc_employee a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'F' ) THEN
        raise_application_error(-20223, 'FK JC_FACULTY_JC_EMPLOYEE_FK in Table JC_FACULTY violates Arc constraint on Table JC_EMPLOYEE - discriminator column EMP_TYPE doesn''t have value ''F'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_5_jc_staff BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_staff
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.emp_type
    INTO d
    FROM
        jc_employee a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'S' ) THEN
        raise_application_error(-20223, 'FK JC_STAFF_JC_EMPLOYEE_FK in Table JC_STAFF violates Arc constraint on Table JC_EMPLOYEE - discriminator column EMP_TYPE doesn''t have value ''S'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_6_jc_student BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_student
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.per_type
    INTO d
    FROM
        jc_person a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'S' ) THEN
        raise_application_error(-20223, 'FK JC_STUDENT_JC_PERSON_FK in Table JC_STUDENT violates Arc constraint on Table JC_PERSON - discriminator column PER_TYPE doesn''t have value ''S'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_6_jc_alumnus BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_alumnus
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.per_type
    INTO d
    FROM
        jc_person a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'A' ) THEN
        raise_application_error(-20223, 'FK JC_ALUMNUS_JC_PERSON_FK in Table JC_ALUMNUS violates Arc constraint on Table JC_PERSON - discriminator column PER_TYPE doesn''t have value ''A'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_6_jc_employee BEFORE
    INSERT OR UPDATE OF person_id, per_type ON jc_employee
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.per_type
    INTO d
    FROM
        jc_person a
    WHERE
            a.person_id = :new.person_id
        AND a.per_type = :new.per_type;

    IF ( d IS NULL OR d <> 'E' ) THEN
        raise_application_error(-20223, 'FK JC_EMPLOYEE_JC_PERSON_FK in Table JC_EMPLOYEE violates Arc constraint on Table JC_PERSON - discriminator column PER_TYPE doesn''t have value ''E'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             0
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
